{"version":3,"sources":["components/Weather.module.css","components/LocationAndTime.module.css","components/SearchBar.module.css","components/SearchBar.js","components/Location.js","components/Time.js","components/Weather.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","SearchBar","props","useState","query","setQuery","className","styles","form","onSubmit","event","preventDefault","trim","length","onSearch","type","inputType","value","onChange","target","placeholder","buttonType","Location","location","children","Time","date","Weather","weather","temp","climate","wind","windspeed","api","App","setWeather","main","console","log","weatherTemp","Math","round","updatedQuery","fetch","then","res","json","result","name","sys","country","Date","toDateString","speed","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mGACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,KAAO,sBAAsB,QAAU,yBAAyB,KAAO,wB,gBCA5HD,EAAOC,QAAU,CAAC,SAAW,kCAAkC,KAAO,gC,qCCAtED,EAAOC,QAAU,CAAC,KAAO,0B,4ICyBVC,EAvBG,SAACC,GAEf,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAaA,OACI,uBAAMC,UAAWC,IAAOC,KAAMC,SAZZ,SAACC,GACnBA,EAAMC,iBACqB,IAAxBP,EAAMQ,OAAOC,QAChBX,EAAMY,SAASV,IASf,UACI,uBAAOW,KAAMb,EAAMc,UAAWC,MAAOb,EAAOc,SAPzB,SAAAR,GACvBL,EAASK,EAAMS,OAAOF,QAMwDG,YAAY,0BACtF,wBAAQL,KAAMb,EAAMmB,WAApB,wB,gBCZGC,EANE,SAACpB,GACd,OACI,qBAAKI,UAAWC,IAAOgB,SAAvB,SAAkCrB,EAAMsB,YCIjCC,EANF,SAAAvB,GACT,OACI,qBAAKI,UAAWC,IAAOmB,KAAvB,SAA8BxB,EAAMsB,Y,gBCQ7BG,EAVC,SAAAzB,GACZ,OACI,sBAAKI,UAAWC,IAAOqB,QAAvB,UACI,qBAAKtB,UAAWC,IAAOsB,KAAvB,SAA8B3B,EAAM2B,OACpC,qBAAKvB,UAAWC,IAAOuB,QAAvB,SAAiC5B,EAAM4B,UACvC,qBAAKxB,UAAWC,IAAOwB,KAAvB,SAA8B7B,EAAM8B,gBCA1CC,EACC,mCADDA,EAEE,2CAuDOC,MAlDf,WAEE,IAAI9B,EAAQ,GACR0B,EAAU,UACd,EAA8B3B,mBAAS,IAAvC,mBAAOyB,EAAP,KAAgBO,EAAhB,KASA,GAAGP,EAAQQ,KAAM,CACfC,QAAQC,IAAIV,GACZ,IAAIW,EAAcC,KAAKC,MAAMb,EAAQQ,KAAKP,MAExCC,GADCS,GAAe,EACL,aACFA,IAAgB,GAAKA,EAAc,GACjC,QACFA,GAAe,IAAMA,EAAc,GACjC,QAEA,aAIf,OACE,sBAAKjC,UAAWwB,EAAhB,UACE,cAAC,EAAD,CACEd,UAAU,OACVK,WAAW,SACXJ,MAAOb,EACPU,SA3BS,SAAC4B,GACdtC,EAAQsC,EACRC,MAAM,GAAD,OAAIV,EAAJ,qBAAyB7B,EAAzB,+BAAqD6B,IACvDW,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAM,OAAIZ,EAAWY,SAyB1BnB,EAAQQ,KACP,gCACE,eAAC,EAAD,WAAWR,EAAQoB,KAAnB,KAA2BpB,EAAQqB,IAAIC,WACvC,cAAC,EAAD,WAAO,IAAIC,MAAOC,iBAClB,cAAC,EAAD,CACEvB,KAAI,UAAKW,KAAKC,MAAMb,EAAQQ,KAAKP,MAA7B,SACJC,QAASF,EAAQA,QAAQ,GAAGQ,KAC5BJ,UAAS,gBAAWJ,EAAQG,KAAKsB,MAAxB,aAGX,OChDKC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.853ebf02.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"weather\":\"Weather_weather__1y497\",\"temp\":\"Weather_temp__3QqeI\",\"climate\":\"Weather_climate__DedzQ\",\"wind\":\"Weather_wind__1ndXU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"location\":\"LocationAndTime_location__1ufxr\",\"date\":\"LocationAndTime_date__2IhDn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"SearchBar_form__3-Lq7\"};","import React, { useState } from 'react';\nimport styles from './SearchBar.module.css';\n\nconst SearchBar = (props) => {\n\n    const [query, setQuery] = useState('');\n\n    const submitHandler = (event) => {\n        event.preventDefault();\n        if(query.trim().length === 0) return;\n        props.onSearch(query);\n    }\n\n    const queryChangeHandler = event => {\n        setQuery(event.target.value);\n    }\n\n\n    return(\n        <form className={styles.form} onSubmit={submitHandler}>\n            <input type={props.inputType} value={query} onChange={queryChangeHandler} placeholder=\"e.g. Montreal, Quebec\"/>\n            <button type={props.buttonType}>Search</button>\n        </form>\n    );\n};\n\nexport default SearchBar;","import React from 'react';\nimport styles from './LocationAndTime.module.css';\n\nconst Location = (props) => {\n    return (\n        <div className={styles.location}>{props.children}</div>\n    );\n}\n\nexport default Location;","import React from 'react';\nimport styles from './LocationAndTime.module.css';\n\nconst Time = props => {\n    return (\n        <div className={styles.date}>{props.children}</div>\n    );\n};\n\nexport default Time;","import React from 'react';\nimport styles from './Weather.module.css';\n\nconst Weather = props => {\n    return (\n        <div className={styles.weather}>\n            <div className={styles.temp}>{props.temp}</div>\n            <div className={styles.climate}>{props.climate}</div>\n            <div className={styles.wind}>{props.windspeed}</div>\n        </div>\n    );\n};\n\nexport default Weather;","import React, { useState }from 'react';\nimport './App.css';\nimport './index.css';\nimport SearchBar from './components/SearchBar';\nimport Location from './components/Location';\nimport Time from './components/Time';\nimport Weather from './components/Weather';\n\nconst api = {\n  key: '61b4403b5a0e0bb697b66f53ab78211c',\n  base: 'https://api.openweathermap.org/data/2.5/'\n}\n\n\n\nfunction App() {\n\n  let query = '';\n  let climate = 'default';\n  const [weather, setWeather] = useState({});\n\n  const search = (updatedQuery) => {\n    query = updatedQuery;\n    fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\n      .then(res => res.json())\n      .then(result => setWeather(result))\n  }\n\n  if(weather.main) {\n    console.log(weather)\n    let weatherTemp = Math.round(weather.main.temp);\n    if(weatherTemp < -5) {\n      climate += ' very-cold';\n    } else if (weatherTemp >= -5 && weatherTemp < 15) {\n      climate += ' cold';\n     } else if(weatherTemp >= 15 && weatherTemp < 30) {\n      climate += ' warm';\n    } else {\n      climate += ' very-warm';\n    }\n    \n}\n  return (\n    <div className={climate}>\n      <SearchBar \n        inputType=\"text\" \n        buttonType=\"submit\" \n        value={query}\n        onSearch={search} \n      />\n      {weather.main ? (\n        <div>\n          <Location>{weather.name}, {weather.sys.country}</Location>\n          <Time>{new Date().toDateString()}</Time>\n          <Weather \n            temp={`${Math.round(weather.main.temp)}Â°C`} \n            climate={weather.weather[0].main}\n            windspeed={`Wind: ${weather.wind.speed} m/s`}\n          />\n        </div>\n      ): ('')}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}