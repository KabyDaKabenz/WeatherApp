{"version":3,"sources":["components/LocationAndDate.module.css","components/Weather.module.css","components/SearchBar.module.css","components/SearchBar.js","components/Location.js","components/Dates.js","components/Weather.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","SearchBar","props","useState","query","setQuery","className","styles","form","onSubmit","event","preventDefault","trim","length","onSearch","type","inputType","value","onChange","target","buttonType","Location","location","children","Date","date","Weather","weather","temp","climate","api","App","setWeather","main","weatherTemp","Math","round","console","log","updatedQuery","fetch","then","res","json","result","name","sys","country","Dates","toDateString","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mGACAA,EAAOC,QAAU,CAAC,SAAW,kCAAkC,KAAO,gC,iBCAtED,EAAOC,QAAU,CAAC,QAAU,yBAAyB,KAAO,sBAAsB,QAAU,2B,oCCA5FD,EAAOC,QAAU,CAAC,KAAO,0B,4ICyBVC,EAvBG,SAACC,GAEf,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAaA,OACI,uBAAMC,UAAWC,IAAOC,KAAMC,SAZZ,SAACC,GACnBA,EAAMC,iBACqB,IAAxBP,EAAMQ,OAAOC,QAChBX,EAAMY,SAASV,IASf,UACI,uBAAOW,KAAMb,EAAMc,UAAWC,MAAOb,EAAOc,SAPzB,SAAAR,GACvBL,EAASK,EAAMS,OAAOF,UAOlB,wBAAQF,KAAMb,EAAMkB,WAApB,wB,gBCZGC,EANE,SAACnB,GACd,OACI,qBAAKI,UAAWC,IAAOe,SAAvB,SAAkCpB,EAAMqB,YCIjCC,EANF,SAAAtB,GACT,OACI,qBAAKI,UAAWC,IAAOkB,KAAvB,SAA8BvB,EAAMqB,Y,gBCO7BG,EATC,SAAAxB,GACZ,OACI,sBAAKI,UAAWC,IAAOoB,QAAvB,UACI,qBAAKrB,UAAWC,IAAOqB,KAAvB,SAA8B1B,EAAM0B,OACpC,qBAAKtB,UAAWC,IAAOsB,QAAvB,SAAiC3B,EAAM2B,cCC7CC,EACC,mCADDA,EAEE,2CA0DOC,MArDf,WAEE,IAAI3B,EAAQ,GACRyB,EAAU,UACd,EAA8B1B,mBAAS,IAAvC,mBAAOwB,EAAP,KAAgBK,EAAhB,KAYA,GAAGL,EAAQM,KAAM,CAEf,IAAIC,EAAcC,KAAKC,MAAMT,EAAQM,KAAKL,MAC1CS,QAAQC,IAAIJ,GAEVL,GADCK,GAAe,EACL,aACFA,IAAgB,GAAKA,EAAc,GACjC,QACFA,GAAe,IAAMA,EAAc,GACjC,QAEA,aAOf,OACE,sBAAK5B,UAAWuB,EAAhB,UACE,cAAC,EAAD,CACEb,UAAU,OACVI,WAAW,SACXH,MAAOb,EACPU,SAlCS,SAACyB,GACdnC,EAAQmC,EACRC,MAAM,GAAD,OAAIV,EAAJ,qBAAyB1B,EAAzB,+BAAqD0B,IACvDW,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAM,OAAIZ,EAAWY,SAgCH,oBAAhBjB,EAAQM,KACd,gCACE,eAAC,EAAD,WAAWN,EAAQkB,KAAnB,KAA2BlB,EAAQmB,IAAIC,WACvC,cAACC,EAAD,WAAQ,IAAIxB,MAAOyB,iBACnB,cAAC,EAAD,CAASrB,KAAI,UAAKO,KAAKC,MAAMT,EAAQM,KAAKL,MAA7B,SAAwCC,QAASF,EAAQA,QAAQ,GAAGM,UAEjF,OCnDKiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.fc4586bb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"location\":\"LocationAndDate_location__2USEJ\",\"date\":\"LocationAndDate_date__2-uIG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"weather\":\"Weather_weather__1y497\",\"temp\":\"Weather_temp__3QqeI\",\"climate\":\"Weather_climate__DedzQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"SearchBar_form__3-Lq7\"};","import React, { useState } from 'react';\nimport styles from './SearchBar.module.css';\n\nconst SearchBar = (props) => {\n\n    const [query, setQuery] = useState('');\n\n    const submitHandler = (event) => {\n        event.preventDefault();\n        if(query.trim().length === 0) return;\n        props.onSearch(query);\n    }\n\n    const queryChangeHandler = event => {\n        setQuery(event.target.value);\n    }\n\n\n    return(\n        <form className={styles.form} onSubmit={submitHandler}>\n            <input type={props.inputType} value={query} onChange={queryChangeHandler}/>\n            <button type={props.buttonType}>Search</button>\n        </form>\n    );\n};\n\nexport default SearchBar;","import React from 'react';\nimport styles from './LocationAndDate.module.css';\n\nconst Location = (props) => {\n    return (\n        <div className={styles.location}>{props.children}</div>\n    );\n}\n\nexport default Location;","import React from 'react';\nimport styles from './LocationAndDate.module.css';\n\nconst Date = props => {\n    return (\n        <div className={styles.date}>{props.children}</div>\n    );\n};\n\nexport default Date;","import React from 'react';\nimport styles from './Weather.module.css';\n\nconst Weather = props => {\n    return (\n        <div className={styles.weather}>\n            <div className={styles.temp}>{props.temp}</div>\n            <div className={styles.climate}>{props.climate}</div>\n        </div>\n    );\n};\n\nexport default Weather;","import React, { useState }from 'react';\nimport './App.css';\nimport './index.css';\nimport SearchBar from './components/SearchBar';\nimport Location from './components/Location';\nimport Dates from './components/Dates';\nimport Weather from './components/Weather';\n\nconst api = {\n  key: '61b4403b5a0e0bb697b66f53ab78211c',\n  base: 'https://api.openweathermap.org/data/2.5/'\n}\n\n\n\nfunction App() {\n\n  let query = '';\n  let climate = 'default';\n  const [weather, setWeather] = useState({});\n\n  const search = (updatedQuery) => {\n    query = updatedQuery;\n    fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\n      .then(res => res.json())\n      .then(result => setWeather(result))\n    \n      \n    \n  }\n\n  if(weather.main) {\n    \n    let weatherTemp = Math.round(weather.main.temp);\n    console.log(weatherTemp)\n    if(weatherTemp < -5) {\n      climate += ' very-cold';\n    } else if (weatherTemp >= -5 && weatherTemp < 15) {\n      climate += ' cold';\n     } else if(weatherTemp >= 15 && weatherTemp < 30) {\n      climate += ' warm';\n    } else {\n      climate += ' very-warm';\n    }\n    \n}\n\n  \n \n  return (\n    <div className={climate}>\n      <SearchBar \n        inputType=\"text\" \n        buttonType=\"submit\" \n        value={query}\n        onSearch={search} \n      />\n      {typeof weather.main != 'undefined' ? (\n        <div>\n          <Location>{weather.name}, {weather.sys.country}</Location>\n          <Dates>{new Date().toDateString()}</Dates>\n          <Weather temp={`${Math.round(weather.main.temp)}Â°C`} climate={weather.weather[0].main}></Weather>\n        </div>\n      ): ('')}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}